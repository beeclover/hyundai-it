name: 🚛 프로덕션 배포
on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  monorepo:
    runs-on: ubuntu-latest
    name: 🚧 packages, app 빌드
    steps:
      - uses: actions/checkout@v3

      - name: 🏗 setup-node (v18.x)
        uses: actions/setup-node@v2
        with:
          node-version: "18.x"
          
      - name: 패지키만 빌드하기위해 theme 제거
        run: |
          rm -rf theme

      - name: 🔨 (node dependencies) monorepo yarn install
        run: |
          yarn install

      - name: 🔨 (node dependencies) forms yarn workspace build
        run: |
          yarn workspace forms build

      - name: 🔨 (node dependencies) homepage yarn workspace build
        run: |
          yarn workspace homepage build

      - uses: actions/upload-artifact@master
        with:
          name: theme-buile-result
          path: ./theme/public/dist
  deploy:
    runs-on: ubuntu-latest
    name: 🚛 소스코드 업데이트 & 빌드파일 배포
    needs: [monorepo]
    steps:
      - uses: actions/checkout@v3

      - name: 🏗 setup-node (v18.x)
        uses: actions/setup-node@v2
        with:
          node-version: "18.x"

      # "@hyundai-it/tailwindcss"는 빌드하지 않아되는 패키지
      - name: theme, packages tailwind yarn link
        run: |
          cd packages/tailwindcss
          yarn link
          cd ../../theme
          yarn link "@hyundai-it/tailwindcss"

      - name: 🔨 (node dependencies) theme yarn build
        run: |
          cd theme
          yarn
          yarn install
          yarn build

      # build의 아티펙트 공유
      - uses: actions/download-artifact@master
        with:
          name: theme-buile-result
          path: ./theme/public/dist
      
      # Caching dependencies for faster builds
      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: 🔨 (php dependencies) php composer install
        uses: php-actions/composer@v6
        with:
          php_version: "8.0"
          args: --working-dir=./theme
          command: install

      - name: 📂 Sync files to Server
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avzr --delete --exclude="node_modules"
          # ARGS: "-rltgoDzvO --ignore-times"
          path: theme/
          remote_path: /www/hyeondaeaiti_570/public/wp-content/themes/main
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_key: ${{ secrets.DEPLOY_KEY }}
          remote_port: ${{ secrets.DEPLOY_PORT }}

  noti:
    name: 🦅 빌드 결과 노티
    needs: [deploy, monorepo]
    runs-on: ubuntu-latest
    steps:
      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            
            Repository: ${{ github.repository }}
            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}

      - name: 🛎 슬랙알림
        uses: 8398a7/action-slack@v3
        with:
          job_name: 🚛 소스코드 업데이트 & 빌드파일 배포
          status: ${{ job.status }}
          fields: repo,message,author,workflow,took,job # selectable (default: repo,message)
          # fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.PETEROSEA_SLACK_WEBHOOK_URL }} # required
        if: always()
